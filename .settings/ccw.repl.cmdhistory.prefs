cmdhistory=["(print \\"Hello World\\")" "(load-file \\"core.clj\\")" "(foo \\"Clojure\\")" "(foo \\"From Clojure\\")" "(compute 11 11)" "(main 1 1)" "(main 2 45)" "(main 1 1)" "(main 0 2)" "(main 02 02)" "(s1)" "(main )" "(main)" "(special-func)" "(powered)" "(with-let 1)" "(fact 4)" "(m-loop)" "(list-comp)" "(letters-filters)" "(fetch)" "clear" "(clear)" "(read-line-by-line)" "date" "(date)" "(uri)" "(.getTime date)" "(generate-items)" "generate-items" "(generate-items)" "(load-items-into-channel (generate-items) m-channel)" "(transaction)" "(-main)" "f" "(f)" "(-> f pack\! show\!)" "(add-test)" "(a-test)" "(\:coefs (linear-model y x))" "(\:coefs lm)" "(use '(incanter io)\\n     )" "(use '(incanter core stats io datasets charts))" "(defn slope [coefs] \\r\\n  (second coefs))\\r\\n(defn intercept [coefs]\\r\\n  (first coefs))\\r\\n(defn next-y [slope intercept x]\\r\\n  (+ intercept (* slope x) ))" "(with-data (read-xls \\"D\:\\\\\\\\eclipse-workspace\\\\\\\\learning-and-examples\\\\\\\\src\\\\\\\\statistics\\\\\\\\regression.xlsx\\")\\r\\n (let [x ($ \:y) \\r\\n       y (sweep ($ \:x))] \\r\\n   (def plot (scatter-plot x y) )\\r\\n   (view plot)\\r\\n   ;(def X (reduce bind-columns (for [i (range 1 11)] (pow x i))))\\r\\n   (def coefs (\:coefs lm))\\r\\n   (def lm (linear-model y x))\\r\\n   (def next-x (inc (last x)))\\r\\n   (def new-y (next-y (slope coefs) (intercept coefs) next-x))\\r\\n   (add-points plot [next-x] [new-y])\\r\\n   (add-lines plot x (\:fitted lm))))" "(use '(incanter core stats io datasets charts))\\r\\n\\r\\n\\r\\n(with-data (read-xls \\"D\:\\\\\\\\eclipse-workspace\\\\\\\\learning-and-examples\\\\\\\\src\\\\\\\\statistics\\\\\\\\regression.xlsx\\")\\r\\n (let [x ($ \:y) \\r\\n       y (sweep ($ \:x))] \\r\\n   (def plot (scatter-plot x y) )\\r\\n   (view plot)\\r\\n   (def X (reduce bind-columns (for [i (range 1 11)] (pow x i))))\\r\\n   (def coefs (\:coefs lm))\\r\\n   (def lm (linear-model y x))\\r\\n   (def next-x (inc (last x)))\\r\\n   (def new-y (next-y (slope coefs) (intercept coefs) next-x))\\r\\n   (add-points plot [next-x] [new-y])\\r\\n   (add-lines plot X (\:fitted lm))))\\r\\n\\r\\n(defn slope [coefs] \\r\\n  (second coefs))\\r\\n(defn intercept [coefs]\\r\\n  (first coefs))\\r\\n(defn next-y [slope intercept x]\\r\\n  (+ intercept (* slope x) ))"]
eclipse.preferences.version=1
